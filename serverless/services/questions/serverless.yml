org: thegoldenhurricast
app: questions
service: questions

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: us-east-2
  profile: tgh-ryan
  environment:
    STAGE: ${opt:stage, self:provider.stage}
    QUESTIONS_TABLE: ${param:questionsTable}

  httpApi:
    shouldStartNameWithService: true
    cors:
      allowedOrigins:
        - https://thegoldenhurricast.com
        - https://www.thegoldenhurricast.com
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - POST
      allowCredentials: true
      exposedResponseHeaders:
        - Special-Response-Header
      maxAge: 6000 # seconds
  
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - Fn::GetAtt: [ QuestionsTable, Arn ]

params:
  default:
    questionsTable: Questions-${opt:stage, self:provider.stage}
  prod:
    slackWebhookUrl: https://hooks.slack.com/services/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
    shouldMinifyCode: true
  dev:
    slackWebhookUrl: https://hooks.slack.com/services/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
    shouldMinifyCode: false

custom:
  warmup:
    default:
      enabled: false
  esbuild:
    bundle: true
    minify: ${param:shouldMinifyCode}

package:
  individually: true
  excludeDevDependencies: true
  
plugins:
  - serverless-plugin-common-excludes
  - serverless-plugin-warmup
  - serverless-esbuild
  
functions:
  submitQuestion:
    handler: api.submitQuestion
    events:
      - httpApi:
          path: /question
          method: POST
    warmup:
      default:
        enabled: prod
  
  forwardQuestionToSlack:
    handler: stream.forwardQuestionToSlack
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [QuestionsTable, StreamArn]
    environment:
      WEBHOOK_URL: ${param:slackWebhookUrl}

resources:
  Resources:
    QuestionsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${param:questionsTable}
        AttributeDefinitions:
          - AttributeName: questionId
            AttributeType: S
        KeySchema:
          - AttributeName: questionId
            KeyType: HASH
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        BillingMode: PAY_PER_REQUEST
